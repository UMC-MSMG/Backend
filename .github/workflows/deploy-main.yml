name: deploy-main

on:
  push:
    branches:
      - main # main 브랜치에 새로운 커밋이 올라왔을 떄 실행되도록 합니다
      - hotfix/fix-cicd-pipe
  workflow_dispatch: # 필요한 경우 수동으로 실행할 수도 있도록 합니다

jobs:
  build:
    runs-on: ubuntu-latest # CI/CD 파이프라인이 실행될 운영체제 환경을 지정합니다
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4 #워크북에는 없음
        with:
          node-version: 20
      - run: npm ci
      # Uncomment if tests are required
      # - run: npm test

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "$EC2_SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          cat >>~/.ssh/config <<END
          Host Backend
            HostName $EC2_HOST
            User ubuntu
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no
          END
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

      # - name: Install Node.js and TSX on EC2
      #   run: |
      #     ssh Backend "curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash - && sudo apt-get install -y nodejs"
      #     ssh Backend "npm install -g tsx"

      - name: Copy Workspace
        run: |
          ssh Backend 'sudo mkdir -p /opt/app'
          ssh Backend 'sudo chown ubuntu:ubuntu /opt/app'
          scp -r ./[!.]* Backend:/opt/app

      # - name: Install dependencies on EC2
      #   run: |
      #     ssh Backend "cd /home/ubuntu/app && npm ci"

      # - name: Start the application with PM2
      #   run: |
      #     ssh Backend "pm2 delete umc-7th-app || true"
      #     ssh Backend "pm2 start /home/ubuntu/app/src/index.ts --name 'umc-7th-app' --interpreter=tsx"

      - name: Copy systemd service file
        run: |
          ssh Backend '
              echo "[Unit]
              Description=UMC 7th Project
              After=network.target

              [Service]
              User=${USER}
              ExecStart=/usr/bin/npm run dev --prefix /opt/app/
              Restart=always

              [Install]
              WantedBy=multi-user.target" | sudo tee /etc/systemd/system/app.service
            '

      - name: Enable systemd service
        run: |
          ssh Backend 'sudo systemctl daemon-reload'
          ssh Backend 'sudo systemctl enable app'

      - name: Restart systemd service
        run: |
          ssh Backend 'sudo systemctl restart app'
